{"ast":null,"code":"import _asyncToGenerator from \"/Users/marinemichelot/Desktop/Aston/P1/gitcant/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let OrderService = /*#__PURE__*/(() => {\n  class OrderService {\n    //-------------------- CONSTRUCTEUR ----------------------------------------------\n    constructor(http) {\n      this.http = http;\n      this.url = 'http://localhost:8080/lunchtime/order';\n      this.tokenItem = localStorage.getItem('token');\n    } //------------------RECUPERER UN USER SELON SON ID ----------------------------------------------\n\n\n    getByUserId$(userId) {\n      const headers = {\n        'Authorization': this.tokenItem,\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'accept': 'application/json'\n      };\n      return this.http.get(`${this.url}/findallforuser/${userId}`, {\n        headers\n      });\n    } //------------------RECUPERER UN USER SELON SON ID ----------------------------------------------\n\n\n    getAllOrders$() {\n      const headers = {\n        'Authorization': this.tokenItem,\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'accept': 'application/json'\n      };\n      return this.http.get(`${this.url}/findall`, {\n        headers\n      });\n    } //------------------RECUPERER UN USER SELON UNE DATE (DEBUT + FIN) ET LE STATUS ----------------------------------------------\n\n\n    getAllOrdersForDate$(dateStart, dateEnd, status) {\n      const params = `?status=${status}&beginDate=${dateStart}&endDate=${dateEnd}`;\n      const headers = {\n        'Authorization': this.tokenItem,\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'accept': 'application/json'\n      };\n      return this.http.get(`${this.url}/findallbetweendateinstatus${params}`, {\n        headers\n      });\n    } //------------------ Recuperation des Commandes d'un utilisateur ---------------------------------\n\n\n    getOrdersForUser(userId) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        //REFORMULATION DE L'URL\n        let url = _this.url + \"/findallforuser/\" + userId; //FORMUALTION DU HEADER \n\n        const headers = {\n          'Authorization': _this.tokenItem,\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'accept': 'application/json'\n        }; //REQUETE API\n\n        return yield _this.http.get(url, {\n          headers\n        }).toPromise();\n      })();\n    } //-------------------- Recuperation des informations d'une commande -------------------------\n\n\n    getOrderInfos(orderId) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        //REFORMULATION DE L'URL\n        var url = _this2.url + \"/find/\" + orderId; //FORMUALTION DU HEADER \n\n        const headers = {\n          'Authorization': _this2.tokenItem,\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'accept': 'application/json'\n        }; //REQUETE API\n\n        return yield _this2.http.get(url, {\n          headers\n        }).toPromise();\n      })();\n    } //-------------------- Suppression d'une commande ------------------------\n\n\n    deleteOrder(orderId) {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        //REFORMULATION DE L'URL\n        let url = _this3.url + \"/cancel/\" + orderId; //FORMUALTION DU HEADER \n\n        const headers = {\n          'Authorization': _this3.tokenItem,\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'accept': 'application/json'\n        }; //REQUETE API\n\n        return yield _this3.http.patch(url, \"\", {\n          headers\n        }).toPromise();\n      })();\n    } //--------------------- Valider et payer une commande -------------------------\n\n\n    deliverAndPayOrder(orderID) {\n      var _this4 = this;\n\n      return _asyncToGenerator(function* () {\n        const headers = {\n          'Authorization': _this4.tokenItem,\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'accept': 'application/json'\n        };\n        return yield _this4.http.patch(`${_this4.url}/deliverandpay/${orderID}/-1`, '', {\n          headers\n        }).toPromise();\n      })();\n    } //--------------------- Passer une commande -------------------------\n\n\n    addOrder(order) {\n      var _this5 = this;\n\n      return _asyncToGenerator(function* () {\n        let url = `${_this5.url}/add`;\n        console.log(\"URL = \", url);\n        const headers = {\n          'Authorization': _this5.tokenItem,\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'accept': 'application/json'\n        };\n        return _this5.http.put(url, order, {\n          headers\n        }).toPromise();\n      })();\n    }\n\n    updateOrder(order, orderId) {\n      var _this6 = this;\n\n      return _asyncToGenerator(function* () {\n        let url = `${_this6.url}/update/${orderId}`;\n        console.log(\"URL = \", url);\n        const headers = {\n          'Authorization': _this6.tokenItem,\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'accept': 'application/json'\n        };\n        return _this6.http.patch(url, order, {\n          headers\n        }).toPromise();\n      })();\n    }\n\n  }\n\n  OrderService.ɵfac = function OrderService_Factory(t) {\n    return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  OrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderService,\n    factory: OrderService.ɵfac,\n    providedIn: 'root'\n  });\n  return OrderService;\n})();","map":null,"metadata":{},"sourceType":"module"}