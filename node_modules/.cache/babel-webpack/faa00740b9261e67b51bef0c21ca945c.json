{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { DateRange, MAT_DATE_RANGE_SELECTION_STRATEGY } from '@angular/material/datepicker';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/core\";\nimport * as i2 from \"src/app/service/date.service\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/datepicker\";\nexport let WeekDaySelectionRangeStrategy = /*#__PURE__*/(() => {\n  class WeekDaySelectionRangeStrategy {\n    constructor(_dateAdapter) {\n      this._dateAdapter = _dateAdapter;\n    }\n\n    selectionFinished(date) {\n      return this._createFiveDayRange(date);\n    }\n\n    createPreview(activeDate) {\n      return this._createFiveDayRange(activeDate);\n    }\n\n    _createFiveDayRange(date) {\n      let d = date;\n\n      if (date) {\n        const start = this._dateAdapter.addCalendarDays(date, -this._dateAdapter.getDayOfWeek(date) + 1);\n\n        const end = this._dateAdapter.addCalendarDays(date, -this._dateAdapter.getDayOfWeek(date) + 5);\n\n        return new DateRange(start, end);\n      }\n\n      return new DateRange(null, null);\n    }\n\n  }\n\n  WeekDaySelectionRangeStrategy.ɵfac = function WeekDaySelectionRangeStrategy_Factory(t) {\n    return new (t || WeekDaySelectionRangeStrategy)(i0.ɵɵinject(i1.DateAdapter));\n  };\n\n  WeekDaySelectionRangeStrategy.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WeekDaySelectionRangeStrategy,\n    factory: WeekDaySelectionRangeStrategy.ɵfac\n  });\n  return WeekDaySelectionRangeStrategy;\n})();\nexport let WeekPickerComponent = /*#__PURE__*/(() => {\n  class WeekPickerComponent {\n    constructor(dateService) {\n      this.dateService = dateService;\n      this.semaineActuelleLundi = \"\";\n      this.semaineActuelleVendredi = \"\";\n      this.semaineActuelle = \"\";\n      this.dateEvent = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.semaineActuelleLundi = this.getMonday();\n      this.semaineActuelleLundi = this.semaineActuelleLundi.getMonth() + 1 + \"/\" + this.semaineActuelleLundi.getDate() + \"/\" + this.semaineActuelleLundi.getFullYear();\n      this.semaineActuelleVendredi = this.getFriday();\n      this.semaineActuelleVendredi = this.semaineActuelleVendredi.getMonth() + 1 + \"/\" + this.semaineActuelleVendredi.getDate() + \"/\" + this.semaineActuelleVendredi.getFullYear();\n      this.semaineActuelle = this.semaineActuelleLundi + \" - \" + this.semaineActuelleVendredi;\n    }\n\n    onDateSelection(value) {\n      this.semaineActuelle = \"\";\n      this.dateEvent.emit(value);\n    }\n\n    getMonday() {\n      let date = new Date();\n      var day = date.getDay(),\n          diff = date.getDate() - day + (day == 0 ? -6 : 1); // adjust when day is sunday\n\n      return new Date(date.setDate(diff));\n    }\n\n    getFriday() {\n      let date = new Date();\n      var day = date.getDay(),\n          diff = date.getDate() - day + (day == 0 ? -6 : 1); // adjust when day is sunday\n\n      return new Date(date.setDate(diff + 4));\n    }\n\n  }\n\n  WeekPickerComponent.ɵfac = function WeekPickerComponent_Factory(t) {\n    return new (t || WeekPickerComponent)(i0.ɵɵdirectiveInject(i2.DateService));\n  };\n\n  WeekPickerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeekPickerComponent,\n    selectors: [[\"app-week-picker\"]],\n    outputs: {\n      dateEvent: \"dateEvent\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n      useClass: WeekDaySelectionRangeStrategy\n    }])],\n    decls: 10,\n    vars: 3,\n    consts: [[\"appearance\", \"fill\"], [3, \"rangePicker\"], [\"matStartDate\", \"\", \"placeholder\", \"Date de D\\u00E9part\", 3, \"dateChange\"], [\"start\", \"\"], [\"matEndDate\", \"\", \"placeholder\", \"Date de Fin\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"]],\n    template: function WeekPickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"mat-form-field\", 0);\n        i0.ɵɵelementStart(1, \"mat-label\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-date-range-input\", 1);\n        i0.ɵɵelementStart(4, \"input\", 2, 3);\n        i0.ɵɵlistener(\"dateChange\", function WeekPickerComponent_Template_input_dateChange_4_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(5);\n\n          return ctx.onDateSelection(_r0.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"mat-datepicker-toggle\", 5);\n        i0.ɵɵelement(8, \"mat-date-range-picker\", null, 6);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(9);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.semaineActuelle);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"rangePicker\", _r1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"for\", _r1);\n      }\n    },\n    directives: [i3.MatFormField, i3.MatLabel, i4.MatDateRangeInput, i4.MatStartDate, i4.MatEndDate, i4.MatDatepickerToggle, i3.MatSuffix, i4.MatDateRangePicker],\n    styles: [\"\"]\n  });\n  return WeekPickerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}