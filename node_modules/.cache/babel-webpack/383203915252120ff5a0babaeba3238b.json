{"ast":null,"code":"import _asyncToGenerator from \"/Users/marinemichelot/Desktop/Aston/P1/gitcant/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FormControl, Validators } from '@angular/forms'; //Imports necessaires au formulaire reactifs et au bon fonctionnement du formulaire (validators)\n\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/service/user.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\n\nfunction ResetPasswordComponent_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Email Invalide \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ResetPasswordComponent = /*#__PURE__*/(() => {\n  class ResetPasswordComponent {\n    //-------------------- CONSTRUCTEUR ----------------------------------------------\n    constructor(router, builder, userService, toastr) {\n      this.router = router;\n      this.builder = builder;\n      this.userService = userService;\n      this.toastr = toastr;\n      this.submitted = false; //Necessaire à la gestion des erreurs (activation des validators)\n\n      this.msgError = ''; //CONFIGURATION DES VALIDATORS : EMAIL\n\n      this.email = new FormControl('', [Validators.required, Validators.email]); //CRÉATION DU FORMULAIRE RÉACTIF\n\n      this.resetPasswordForm = this.builder.group({\n        email: this.email\n      });\n    } //-------------------- ON INIT ----------------------------------------------\n\n\n    ngOnInit() {} //-------------------- RENVOIE DU MOT DE PASSE ----------------------------------------------\n\n\n    resetPassword() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        //REQUETE ASYNCHRONE D'ENVOIE DU MOT DE PASSE PAR MAIL\n        try {\n          //REQUETE AU SERVICE DES UTILISATEURS\n          yield _this.userService.forgotPassword(_this.resetPasswordForm); //MESSAGE UTILISATEUR\n\n          _this.showGoodToaster(\"Mail envoyé, notez le quelque part cette fois ci Capitaine ;) !\"); //REDIRECTION\n\n\n          _this.router.navigate(['login']);\n        } catch (error) {\n          //GESTION DES ERREURS ET MESSAGES D'ERREURS\n          if (error['status'] == 401) {\n            _this.showBadToaster(\"Mais Chef ! T'es plus connecté :( ... Reviens :D ! \");\n          } else {\n            _this.showBadToaster('Chef, chef ! On a un problème :( ' + error['status'] + ' ' + error.error['exceptionMessage']);\n          }\n        }\n      })();\n    } //-------------------- RETOUR VERS LA PAGE DE CONNEXION  ----------------------------------------------\n\n\n    onReturn() {\n      //REDIRECTION\n      this.router.navigate(['login']);\n    } //-------------------- FONCTIONS DES TOASTER ----------------------------------------------\n\n\n    showGoodToaster(message) {\n      this.toastr.success(message);\n    }\n\n    showBadToaster(message) {\n      this.toastr.error(message);\n    }\n\n    showCleverToaster(message) {\n      this.toastr.info(message);\n    }\n\n  }\n\n  ResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) {\n    return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n\n  ResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResetPasswordComponent,\n    selectors: [[\"app-reset-password\"]],\n    decls: 15,\n    vars: 5,\n    consts: [[\"id\", \"body\"], [\"id\", \"resetForm\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input\"], [\"type\", \"text\", \"placeholder\", \"Email\", 3, \"formControl\"], [4, \"ngIf\"], [1, \"btn-pw\", 3, \"disabled\"], [\"id\", \"boutonReturn\"], [3, \"click\"]],\n    template: function ResetPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"main\", 0);\n        i0.ɵɵelementStart(1, \"h2\");\n        i0.ɵɵtext(2, \"R\\u00E9initialisation de Mot de Passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.resetPassword();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, ResetPasswordComponent_p_7_Template, 2, 0, \"p\", 5);\n        i0.ɵɵelementStart(8, \"button\", 6);\n        i0.ɵɵtext(9, \"R\\u00E9initialiser mon Mot de Passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\");\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 7);\n        i0.ɵɵelementStart(13, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_button_click_13_listener() {\n          return ctx.onReturn();\n        });\n        i0.ɵɵtext(14, \"Retour\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.resetPasswordForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.email);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.email.dirty && (ctx.email.hasError(\"required\") || ctx.email.hasError(\"email\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.email.hasError(\"required\") || ctx.email.hasError(\"email\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.msgError);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i5.NgIf],\n    styles: [\"h2[_ngcontent-%COMP%]{color:#175242;text-align:center;font-size:4vh;padding-top:1vh;padding-bottom:1vh;margin:2vh}#body[_ngcontent-%COMP%]{margin:auto;width:70%;display:flex;flex-direction:column;justify-content:center}#resetForm[_ngcontent-%COMP%]{background-color:#86cb92;border-radius:6px;margin-left:auto;margin-right:auto;padding:1em;text-align:center;color:#175242;font-size:2.5vh;height:20vh;display:flex;flex-direction:column;align-items:center}form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#f18f01;background-color:#175242;border:#175242;border-radius:6px;margin-top:2em;padding:1em;font-size:.7em;font-weight:bold;cursor:pointer}form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{background-color:#7a827d}p[_ngcontent-%COMP%]{color:red}.input[_ngcontent-%COMP%]{flex-wrap:wrap;border:#86CB92;font-size:2.5vh;margin-top:3vh;width:100%}#boutonReturn[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-around;margin-top:2vh}#boutonReturn[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#175242;color:orange;width:20%;margin-top:2em;margin-left:auto;margin-right:auto;padding:.5em;border-radius:6px;border:1px solid white;cursor:pointer}\"]\n  });\n  return ResetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}