{"ast":null,"code":"import _asyncToGenerator from \"/Users/marinemichelot/Desktop/Aston/P1/gitcant/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FormControl, Validators } from '@angular/forms';\nimport { ReplaySubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/meal.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\n\nfunction AddMealComponent_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Nom Invalide\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddMealComponent_p_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Prix Invalide\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddMealComponent_li_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"label\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 12);\n    i0.ɵɵlistener(\"click\", function AddMealComponent_li_19_Template_input_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onChangeCheckbox($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const week_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", week_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Semaine \", week_r3, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"name\", week_r3);\n    i0.ɵɵpropertyInterpolate(\"value\", week_r3);\n  }\n}\n\nexport let AddMealComponent = /*#__PURE__*/(() => {\n  class AddMealComponent {\n    //------------------------------- Constructeur -------------------------------------\n    constructor(router, mealService, route, builder, toastr) {\n      this.router = router;\n      this.mealService = mealService;\n      this.route = route;\n      this.builder = builder;\n      this.toastr = toastr;\n      this.msgError = \"\";\n      this.categoryId = 0;\n      this.categoryName = \"\";\n      this.avatar = \"\";\n      this.imagePath = \"\";\n      this.base64Output = \"data:image/png;base64,\";\n      this.mealWeekAvailable = [];\n      this.weeks = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53]; //CONFIGURATION DES VALIDATORS : NOM ARTICLE\n\n      this.mealName = new FormControl('', [Validators.required, Validators.email]); //CONFIGURATION DES VALIDATORS : PRIX ARTICLE\n\n      this.mealPrice = new FormControl('', [Validators.required]);\n      this.mealImage = new FormControl('', [Validators.required]); //FORMATION DU FORMULAIRE REACTIF DE MODIFICATION D'ARTICLE\n\n      this.AddMealForm = this.builder.group({\n        nomArticle: this.mealName,\n        prixArticle: this.mealPrice,\n        image: this.mealImage\n      });\n    }\n\n    //------------------------------- On Init -------------------------------------\n    ngOnInit() {\n      //RÉCUPÉRATION DE L'ID DE L'UTILISATEUR PAR UN SCREEN DE L'URL\n      this.categoryId = this.route.snapshot.paramMap.get('idCategory'); //Affichage du nom de la catégorie en fonction de l'id de la categorie recu en parametre de l'url\n\n      switch (this.categoryId) {\n        case \"0\":\n          this.categoryName = \"Autres\";\n          this.categoryId = 0;\n          break;\n\n        case \"1\":\n          this.categoryName = \"Apéritif\";\n          this.categoryId = 1;\n          break;\n\n        case \"2\":\n          this.categoryName = \"Entrée\";\n          this.categoryId = 2;\n          break;\n\n        case \"3\":\n          this.categoryName = \"Plats Principaux\";\n          this.categoryId = 3;\n          break;\n\n        case \"4\":\n          this.categoryName = \"Les A-Cotés\";\n          this.categoryId = 4;\n          break;\n\n        case \"5\":\n          this.categoryName = \"Les Desserts\";\n          this.categoryId = 5;\n          break;\n\n        case \"6\":\n          this.categoryName = \"Brunchs et Dejeuners\";\n          this.categoryId = 6;\n          break;\n\n        case \"7\":\n          this.categoryName = \"Soupes et Potages\";\n          this.categoryId = 7;\n          break;\n\n        case \"8\":\n          this.categoryName = \"Sauce et Vinaigrettes\";\n          this.categoryId = 8;\n          break;\n\n        case \"9\":\n          this.categoryName = \"Boissons et Cocktails\";\n          this.categoryId = 9;\n          break;\n\n        case \"10\":\n          this.categoryName = \"Sandwichs\";\n          this.categoryId = 10;\n          break;\n\n        case \"11\":\n          this.categoryName = \"Snacks\";\n          this.categoryId = 11;\n          break;\n      }\n    } //------------------------------- Ajout d'un item a la categorie choisie -------------------------------------\n\n\n    onAddItem() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        //Requete asynchrone d'ajout d'un meal a une categorie\n        try {\n          //Formation de l'objet a inserer en bdd\n          let meal = {\n            \"description\": \"\",\n            \"label\": _this.AddMealForm.value.nomArticle,\n            \"image\": {\n              \"imagePath\": _this.imagePath,\n              \"image64\": _this.avatar\n            },\n            \"priceDF\": _this.AddMealForm.value.prixArticle,\n            \"availableForWeeks\": _this.mealWeekAvailable,\n            \"ingredientsId\": [],\n            \"category\": _this.categoryId\n          }; //Requete au service meal\n\n          yield _this.mealService.addMeal(meal); //REDIRECTION\n\n          _this.router.navigate(['/lunchHomepage']);\n        } catch (error) {\n          //GESTION DES ERREURS ET MESSAGES D'ERREURS\n          if (error['status'] == 401) {\n            _this.showBadToaster(\"Mais Chef ! T'es plus connecté :( ... Reviens :D ! \");\n          } else {\n            _this.showBadToaster('Chef, chef ! On a un problème :( ' + error['status'] + ' ' + error.error['exceptionMessage']);\n          }\n        }\n      })();\n    } //------------------------------- Retour à la homepage de la lunchlady -------------------------------------\n\n\n    onReturn() {\n      //REDIRECTION\n      this.router.navigate(['/lunchHomepage']);\n    } //-------------------- FONCTIONS DES TOASTER ----------------------------------------------\n\n\n    showGoodToaster(message) {\n      this.toastr.success(message);\n    }\n\n    showBadToaster(message) {\n      this.toastr.error(message);\n    }\n\n    showCleverToaster(message) {\n      this.toastr.info(message);\n    } //------------------------------- Modification de l'image de l'element a ajouter --------------------------\n\n\n    onModifyAvatar(file) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        try {\n          //Recuperation du path de l'image\n          _this2.imagePath = file.name; //Conversion de l'image en base 64\n\n          _this2.convertFile(file).subscribe(base64 => {\n            _this2.base64Output = _this2.base64Output + base64;\n            _this2.avatar = _this2.base64Output;\n          });\n        } catch (error) {\n          //GESTION DES ERREURS ET MESSAGES D'ERREURS\n          if (error['status'] == 401) {\n            _this2.showBadToaster(\"Mais Chef ! T'es plus connecté :( ... Reviens :D ! \");\n          } else {\n            _this2.showBadToaster('Chef, chef ! On a un problème :( ' + error['status'] + ' ' + error.error['exceptionMessage']);\n          }\n        }\n      })();\n    } //---------------------------------- Conversion du path en base 64 ----------------------------------------\n\n\n    convertFile(file) {\n      const result = new ReplaySubject(1);\n      const reader = new FileReader();\n      reader.readAsBinaryString(file);\n\n      reader.onload = event => result.next(btoa(event.target.result.toString()));\n\n      return result;\n    } //--------------------------------- Gestion des disponibilité des semaine en fonctions des checkboxs ----------------\n\n\n    onChangeCheckbox(event) {\n      //Compteur necessaire a la suppression des checkboxs\n      let count = 0; //Si la checkbox est deja cochée alors on décoche\n\n      if (event.target.checked == true) {\n        this.mealWeekAvailable.push(parseInt(event.target.value, 10));\n      } else {\n        this.mealWeekAvailable.forEach(meal => {\n          if (meal == event.target.value) {\n            this.mealWeekAvailable.splice(count, 1);\n          }\n\n          count = count + 1;\n        });\n      }\n    }\n\n  }\n\n  AddMealComponent.ɵfac = function AddMealComponent_Factory(t) {\n    return new (t || AddMealComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.MealService), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n\n  AddMealComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddMealComponent,\n    selectors: [[\"app-add-meal\"]],\n    decls: 27,\n    vars: 11,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"id\", \"inputs\"], [1, \"input\"], [\"type\", \"text\", 3, \"formControl\"], [4, \"ngIf\"], [\"type\", \"number\", 3, \"formControl\"], [\"type\", \"file\", \"id\", \"photoUser\", \"name\", \"photoUser\", \"accept\", \"image/png, image/jpeg\", 3, \"formControl\", \"change\"], [3, \"src\"], [4, \"ngFor\", \"ngForOf\"], [3, \"disabled\"], [3, \"click\"], [3, \"for\"], [\"type\", \"checkbox\", 3, \"name\", \"value\", \"click\"]],\n    template: function AddMealComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"h1\");\n        i0.ɵɵtext(2, \"Ajouter un article dans la carte\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h2\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddMealComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onAddItem();\n        });\n        i0.ɵɵelementStart(6, \"div\", 1);\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵtext(8, \" Nom de l'article : \");\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, AddMealComponent_p_10_Template, 2, 0, \"p\", 4);\n        i0.ɵɵelementStart(11, \"div\", 2);\n        i0.ɵɵtext(12, \" Prix : \");\n        i0.ɵɵelement(13, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, AddMealComponent_p_14_Template, 2, 0, \"p\", 4);\n        i0.ɵɵelementStart(15, \"input\", 6);\n        i0.ɵɵlistener(\"change\", function AddMealComponent_Template_input_change_15_listener($event) {\n          return ctx.onModifyAvatar($event.target.files[0]);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelement(17, \"img\", 7);\n        i0.ɵɵelementStart(18, \"ul\");\n        i0.ɵɵtemplate(19, AddMealComponent_li_19_Template, 4, 4, \"li\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 9);\n        i0.ɵɵtext(21, \" Ajouter \\u00E0 la carte\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"p\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\");\n        i0.ɵɵelementStart(25, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function AddMealComponent_Template_button_click_25_listener() {\n          return ctx.onReturn();\n        });\n        i0.ɵɵtext(26, \"Retour \\u00E0 la carte\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Cat\\u00E9gorie : \", ctx.categoryName, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.AddMealForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.mealName);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mealName.dirty && ctx.mealName.hasError(\"required\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.mealPrice);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mealPrice.dirty && ctx.mealPrice.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.mealImage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.avatar, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.weeks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.mealName.hasError(\"required\") || ctx.mealPrice.hasError(\"required\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.msgError);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlDirective, i5.NgIf, i3.NumberValueAccessor, i5.NgForOf],\n    styles: [\"\"]\n  });\n  return AddMealComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}