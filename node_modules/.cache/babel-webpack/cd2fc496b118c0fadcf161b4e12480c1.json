{"ast":null,"code":"import _asyncToGenerator from \"/Users/marinemichelot/Desktop/Aston/P1/gitcant/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FormControl, Validators } from '@angular/forms'; //Imports necessaires au formulaire reactifs et au bon fonctionnement du formulaire (validators)\n\nimport { ReplaySubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/menu.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"src/app/service/meal.service\";\nimport * as i6 from \"@angular/common\";\n\nfunction ModifyMealComponent_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Nom Invalide\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModifyMealComponent_p_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Prix Invalide\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModifyMealComponent_div_19_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 14);\n    i0.ɵɵlistener(\"click\", function ModifyMealComponent_div_19_input_3_Template_input_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.onChangeCheckbox($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const week_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate(\"name\", week_r3.id);\n    i0.ɵɵpropertyInterpolate(\"value\", week_r3.id);\n  }\n}\n\nfunction ModifyMealComponent_div_19_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 15);\n    i0.ɵɵlistener(\"click\", function ModifyMealComponent_div_19_ng_template_4_Template_input_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.onChangeCheckbox($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const week_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate(\"name\", week_r3.id);\n    i0.ɵɵpropertyInterpolate(\"value\", week_r3.id);\n  }\n}\n\nfunction ModifyMealComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"label\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ModifyMealComponent_div_19_input_3_Template, 1, 2, \"input\", 12);\n    i0.ɵɵtemplate(4, ModifyMealComponent_div_19_ng_template_4_Template, 1, 2, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const week_r3 = ctx.$implicit;\n\n    const _r5 = i0.ɵɵreference(5);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", week_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Semaine \", week_r3.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", week_r3.checked)(\"ngIfElse\", _r5);\n  }\n}\n\nexport let ModifyMealComponent = /*#__PURE__*/(() => {\n  class ModifyMealComponent {\n    //-------------------------- Constructeur -------------------------------------\n    constructor(router, menuService, route, builder, toastr, mealService) {\n      this.router = router;\n      this.menuService = menuService;\n      this.route = route;\n      this.builder = builder;\n      this.toastr = toastr;\n      this.mealService = mealService;\n      this.getMealInfos = [];\n      this.msgError = \"\";\n      this.mealId = \"\";\n      this.mealImagePath = \"\";\n      this.mealbase64Image = \"data:image/png;base64,\";\n      this.mealWeekAvailable = [];\n      this.avatar = \"\";\n      this.categoryName = \"\";\n      this.preparedWeeksForFindWeeksAvailable = [];\n      this.weeks = []; //CONFIGURATION DES VALIDATORS : NOM ARTICLE\n\n      this.mealName = new FormControl('', [Validators.required, Validators.email]); //CONFIGURATION DES VALIDATORS : PRIX ARTICLE\n\n      this.mealPrice = new FormControl('', [Validators.required]); //FORMATION DU FORMULAIRE REACTIF DE MODIFICATION D'ARTICLE\n\n      this.modifyMealForm = this.builder.group({\n        mealName: this.mealName,\n        mealPrice: this.mealPrice\n      });\n    } //-------------------- ON INIT ----------------------------------------------\n\n\n    ngOnInit() {\n      //RÉCUPÉRATION DE L'ID DE L'UTILISATEUR PAR UN SCREEN DE L'URL\n      this.mealId = this.route.snapshot.paramMap.get('mealId'); //Recuperation de l'element a modifier et ses informations\n\n      this.getMeal(this.mealId); //Récuperation de l'image de l'element\n\n      this.getMealImage(this.mealId);\n    } //-------------------- GET MEAL IMAGE----------------------------------------------\n\n\n    getMealImage(mealId) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        //Requete asynchrone de recuperation de l'image de l'element\n        try {\n          //Requete API de recuperation des informations de l'image de l'element\n          let mealImageFromBack = yield _this.mealService.findMealImage(mealId);\n\n          if (mealImageFromBack['image64'] != \"data:image/png;base64,\") {\n            _this.avatar = mealImageFromBack['image64'];\n          }\n        } catch (error) {\n          //GESTION DES ERREURS ET MESSAGES D'ERREURS\n          if (error['status'] == 401) {\n            _this.showBadToaster(\"Mais Chef ! T'es plus connecté :( ... Reviens :D ! \");\n          } else {\n            _this.showBadToaster('Chef, chef ! On a un problème :( ' + error['status'] + ' ' + error.error['exceptionMessage']);\n          }\n        }\n      })();\n    } //-------------------- RECUPERER LES INFORMATIONS DE L'UTILISATEUR ----------------------------------------------\n\n\n    getMeal(mealId) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        //REQUETE ASYNCHRONE DE RECUPERATION DE LA CARTE DISPONIBLE POUR CETTE SEMAINE\n        try {\n          //REQUETE AU SERVICE MENU\n          _this2.getMealInfos = yield _this2.mealService.findAMeal(mealId); //Recuperation de la categorie de l'element a modifier\n\n          _this2.getMealCategory(_this2.getMealInfos); //Recuperation des semaines ou l'element est disponible\n\n\n          _this2.mealWeekAvailable = _this2.getMealInfos.availableForWeeks; //Changement des checkbox en fonction de la recuperation des semaines disponibles selectionnée à la création de l'element\n\n          _this2.onChargeCheckboxChoosen(); //Récuperation des semaines disopibiles pour l'afficher\n\n\n          _this2.mealWeekAvailable = _this2.getMealInfos.availableForWeeks; //AJOUT DES VALEURS RECUPERÉES DE L'UTILISATEUR DANS LE FORMULAIRE PRÉ-REMPLIE\n\n          _this2.modifyMealForm.setValue({\n            mealName: _this2.getMealInfos.label,\n            mealPrice: _this2.getMealInfos.priceDF\n          });\n        } catch (error) {\n          //GESTION DES ERREURS ET MESSAGES D'ERREURS\n          if (error['status'] == 401) {\n            _this2.msgError = \"Identifiant ou Mot de Passe Incorrect\";\n          } else {\n            _this2.msgError = 'Problème rencontré : ' + error['status'] + ' ' + error.error['exceptionMessage']; //Formation du message d'erreur\n          }\n        }\n      })();\n    } //-------------------- RECUPERER LES INFORMATIONS DE L'UTILISATEUR ----------------------------------------------\n\n\n    getMealCategory(meal) {\n      //Selon l'id de la category, on attribut le nom de la categorie\n      switch (meal.category) {\n        case 0:\n          this.categoryName = \"Autres\";\n          break;\n\n        case 1:\n          this.categoryName = \"Apéritif\";\n          break;\n\n        case 2:\n          this.categoryName = \"Entrée\";\n          break;\n\n        case 3:\n          this.categoryName = \"Plats Principaux\";\n          break;\n\n        case 4:\n          this.categoryName = \"Les A-Cotés\";\n          break;\n\n        case 5:\n          this.categoryName = \"Les Desserts\";\n          break;\n\n        case 6:\n          this.categoryName = \"Brunchs et Déjeuners\";\n          break;\n\n        case 7:\n          this.categoryName = \"Soupes et Potages\";\n          break;\n\n        case 8:\n          this.categoryName = \"Sauce et Vinaigrettes\";\n          break;\n\n        case 9:\n          this.categoryName = \"Boissons et Cocktails\";\n          break;\n\n        case 10:\n          this.categoryName = \"Sandwichs\";\n          break;\n\n        case 11:\n          this.categoryName = \"Snacks\";\n          break;\n      }\n    } //-------------------- MODIFIER UN ELEMENT DE LA CARTE ----------------------------------------------\n\n\n    onModifyMeal() {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        //REQUETE ASYNCHRONE DE RECUPERATION DE LA CARTE DISPONIBLE POUR CETTE SEMAINE\n        try {\n          //Récuperation des informations de l'element a modifier\n          let meal = _this3.getMealInfos;\n          meal.label = _this3.modifyMealForm.value.mealName;\n          meal.priceDF = _this3.modifyMealForm.value.mealPrice; //REQUETE AU SERVICE MENU\n\n          yield _this3.menuService.modifyItem(meal);\n\n          _this3.onReturn();\n        } catch (error) {\n          //GESTION DES ERREURS ET MESSAGES D'ERREURS\n          if (error['status'] == 401) {\n            _this3.msgError = \"Identifiant ou Mot de Passe Incorrect\";\n          } else {\n            _this3.msgError = 'Problème rencontré : ' + error['status'] + ' ' + error.error['exceptionMessage']; //Formation du message d'erreur\n          }\n        }\n      })();\n    } //-------------------- RETOUR A LA HOMEPAGE DE LA LUNCH LADY -----------------------------------\n\n\n    onReturn() {\n      //REDIRECTION\n      this.router.navigate(['/lunchHomepage']);\n    } //-------------------- RETOUR A LA HOMEPAGE DE LA LUNCH LADY -----------------------------------\n\n\n    onModifyMealAvatar(file) {\n      var _this4 = this;\n\n      return _asyncToGenerator(function* () {\n        try {\n          //Récuperation du path de l'image\n          _this4.mealImagePath = file.name; //Conversion de l'image en string de base 64\n\n          _this4.convertFile(file).subscribe(base64 => {\n            _this4.mealbase64Image = _this4.mealbase64Image + base64;\n            _this4.mealImage = _this4.mealbase64Image;\n          });\n\n          let mealId = _this4.mealId;\n          let objImage = {\n            \"imagePath\": _this4.mealImagePath,\n            \"image64\": _this4.mealImage\n          };\n          console.log(objImage);\n          yield _this4.mealService.updateMealImg(objImage, mealId);\n\n          _this4.router.navigateByUrl('/RefreshComponent', {\n            skipLocationChange: true\n          }).then(() => {\n            _this4.router.navigate(['modifyMeal/' + mealId]);\n          });\n        } catch (error) {\n          //GESTION DES ERREURS ET MESSAGES D'ERREURS\n          if (error['status'] == 401) {\n            _this4.showBadToaster(\"Mais Chef ! T'es plus connecté :( ... Reviens :D ! \");\n          } else {\n            _this4.showBadToaster('Chef, chef ! On a un problème :( ' + error['status'] + ' ' + error.error['exceptionMessage']);\n          }\n        }\n      })();\n    } //-------------------------- Conversion du path de l'image en string de base 64 ------------------------------\n\n\n    convertFile(file) {\n      const result = new ReplaySubject(1);\n      const reader = new FileReader(); //Conversion du fichier en string bianire\n\n      reader.readAsBinaryString(file); //Conversion du fichier en string base 64\n\n      reader.onload = event => result.next(btoa(event.target.result.toString())); //Renvoie la base 64 du fichier\n\n\n      return result;\n    } //-------------------- FONCTIONS DES TOASTER ----------------------------------------------\n\n\n    showGoodToaster(message) {\n      this.toastr.success(message);\n    }\n\n    showBadToaster(message) {\n      this.toastr.error(message);\n    }\n\n    showCleverToaster(message) {\n      this.toastr.info(message);\n    } //------------------------ Changement lors d'appuis sur les checkbox des semaines ou l'element est disponible ----------------------\n\n\n    onChangeCheckbox(event) {\n      //Necessaire pour récuperer l'index dans le tableau des semaines disponible de la semaine cherchée\n      let count = 0; //Si elle est deja checkée, alors on la retire de l'array et  on la décoche\n\n      if (event.target.checked == true) {\n        this.mealWeekAvailable.push(parseInt(event.target.value, 10));\n      } else {\n        //Sinon on la coche et on la push dans l'array\n        this.mealWeekAvailable.forEach(meal => {\n          if (meal == event.target.value) {\n            this.mealWeekAvailable.splice(count, 1);\n          }\n\n          count = count + 1;\n        });\n      }\n    } //------------------------ Chargement des semaines deja cochées au paravant lors de la création de l'element ----------------------\n\n\n    onChargeCheckboxChoosen() {\n      //Pour chaque semaine de l'année\n      for (let i = 1; i < 54; i++) {\n        //Création d'un objet de la semaine\n        let objWeek = {\n          \"id\": i,\n          \"checked\": false\n        }; //Création du tableau de semaine utilisables avec les checkbox\n\n        this.weeks.push(objWeek);\n      } //Si dans la semaine est dans la liste des semaines deja cochées alors on attribut la value checked dans la liste des semaines complete\n\n\n      for (let y = 0; y < this.mealWeekAvailable.length; y++) {\n        for (let i = 0; i < this.weeks.length; i++) {\n          if (this.mealWeekAvailable[y] == this.weeks[i].id) {\n            this.weeks[i].checked = true;\n          }\n        }\n      }\n    }\n\n  }\n\n  ModifyMealComponent.ɵfac = function ModifyMealComponent_Factory(t) {\n    return new (t || ModifyMealComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.MenuService), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i5.MealService));\n  };\n\n  ModifyMealComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifyMealComponent,\n    selectors: [[\"app-modify-meal\"]],\n    decls: 27,\n    vars: 10,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"id\", \"inputs\"], [1, \"input\"], [\"type\", \"text\", 3, \"formControl\"], [4, \"ngIf\"], [\"type\", \"number\", 3, \"formControl\"], [\"type\", \"file\", \"id\", \"photoUser\", \"name\", \"photoUser\", \"accept\", \"image/png, image/jpeg\", 3, \"change\"], [3, \"src\"], [4, \"ngFor\", \"ngForOf\"], [3, \"disabled\"], [3, \"click\"], [3, \"for\"], [\"checked\", \"checked\", \"type\", \"checkbox\", 3, \"name\", \"value\", \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"unChecked\", \"\"], [\"checked\", \"checked\", \"type\", \"checkbox\", 3, \"name\", \"value\", \"click\"], [\"type\", \"checkbox\", 3, \"name\", \"value\", \"click\"]],\n    template: function ModifyMealComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"h1\");\n        i0.ɵɵtext(2, \"Ajouter un article dans la carte\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h2\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ModifyMealComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onModifyMeal();\n        });\n        i0.ɵɵelementStart(6, \"div\", 1);\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵtext(8, \" Nom de l'article : \");\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, ModifyMealComponent_p_10_Template, 2, 0, \"p\", 4);\n        i0.ɵɵelementStart(11, \"div\", 2);\n        i0.ɵɵtext(12, \" Prix : \");\n        i0.ɵɵelement(13, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, ModifyMealComponent_p_14_Template, 2, 0, \"p\", 4);\n        i0.ɵɵelementStart(15, \"input\", 6);\n        i0.ɵɵlistener(\"change\", function ModifyMealComponent_Template_input_change_15_listener($event) {\n          return ctx.onModifyMealAvatar($event.target.files[0]);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelement(17, \"img\", 7);\n        i0.ɵɵelementStart(18, \"ul\");\n        i0.ɵɵtemplate(19, ModifyMealComponent_div_19_Template, 6, 4, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 9);\n        i0.ɵɵtext(21, \" Modifier l'\\u00E9lement\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"p\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\");\n        i0.ɵɵelementStart(25, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function ModifyMealComponent_Template_button_click_25_listener() {\n          return ctx.onReturn();\n        });\n        i0.ɵɵtext(26, \"Retour \\u00E0 la carte\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Cat\\u00E9gorie : \", ctx.categoryName, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.modifyMealForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.mealName);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mealName.dirty && ctx.mealName.hasError(\"required\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.mealPrice);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mealPrice.dirty && ctx.mealPrice.hasError(\"required\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.avatar, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.weeks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.mealName.hasError(\"required\") || ctx.mealPrice.hasError(\"required\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.msgError);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlDirective, i6.NgIf, i3.NumberValueAccessor, i6.NgForOf],\n    styles: [\"\"]\n  });\n  return ModifyMealComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}